<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ojt.toyproject.book.BookMapper">
    <!--도서정보 CRUD-->
    <insert id="insertBookInfo"
            parameterType="BookInfoDto">
        INSERT INTO book_info
        VALUES (#{isbn}, #{category}, #{title}, #{author}, #{publisher}, #{totalRentCount})
    </insert>

    <select id="getBookInfoList"
            parameterType="SearchDto"
            resultType="BookInfoDto">
        SELECT i.isbn, i.category, i.title, i.author, i.publisher, i.total_rent_count,
        COUNT(*) AS total_stock_count,
        COUNT(CASE WHEN b.is_in_stock = 'N' THEN 1 END) AS rent_count,
        COUNT(CASE WHEN b.is_in_stock = 'Y' THEN 1 END) AS in_stock_count
        FROM book b
        LEFT JOIN book_info i
        ON b.isbn = i.isbn
        <where>
            <if test="searchType != null and keyword != null">
                ${searchType} LIKE CONCAT('%',#{keyword},'%')
            </if>
        </where>
        GROUP BY b.isbn
        <if test="order != null">
            ORDER BY i.total_rent_count ${order}
        </if>
        LIMIT
        <if test="pagination.limitStart != null and recordSize != null">
            ${pagination.limitStart}, ${recordSize}
        </if>

    </select>

    <select id="getBookInfoByIsbn"
            parameterType="Long"
            resultType="BookInfoDto">
        select
            i.isbn, i.category, i.title, i.author, i.publisher, i.total_rent_count,
            sum(rent) as rent_count,
            sum(in_stock) as in_stock_count,
            (SELECT COUNT(*) FROM booking WHERE isbn=${isbn} AND is_rented = 'N') AS booking_count
        from (SELECT i.isbn, i.category, i.title, i.author, i.publisher, i.total_rent_count,
                -- COUNT(*) AS total_stock_count,
        case
            when is_in_stock = 'N' then 1
            else 0
        AS rent,
        case
            when is_in_stock = 'Y' then 1
            else 0
        AS in_stock
        FROM (SELECT * FROM book WHERE isbn=${isbn}) b
        LEFT JOIN book_info i
        ON b.isbn = i.isbn) a
        group by i.isbn, i.category, i.title, i.author, i.publisher, i.total_rent_count
    </select>



    <update id="updateBookInfo"
            parameterType="BookInfoDto">
        UPDATE book_info
        SET category = #{category},
            title = #{title},
            author = #{author},
            publisher = #{publisher}
        WHERE isbn = #{isbn}
    </update>

    <delete id="deleteBookInfo"
            parameterType="Long">
        DELETE FROM book_info
        WHERE isbn=#{isbn}
    </delete>

    <delete id="deleteBookInfos"
            parameterType="List">
        DELETE FROM book_info
        WHERE isbn IN
        <foreach collection="list" item="isbnList" open="(" close=")" separator=",">
            #{isbnList}
        </foreach>
    </delete>


    <!--  소장도서 CRUD  -->
    <insert id="insertBook"
            parameterType="BookDto">
        INSERT INTO book (isbn, stock_num, stock_date, is_in_stock)
        VALUES (#{isbn}, #{stockNum}, #{stockDate}, #{isInStock})
    </insert>

    <select id="getBookList"
            parameterType="SearchDto"
            resultType="BookDto">
        SELECT  seq,
                isbn,
                stock_num,
                stock_date,
                is_in_stock
        FROM book
        <where>
            <if test="searchType != null and keyword != null">
                ${searchType} = #{keyword}
            </if>
        </where>
    </select>


    <update id="updateBook"
            parameterType="BookDto">
        UPDATE book
        SET isbn = #{isbn},
            stock_num = #{stockNum},
            stock_date = #{stockDate},
            is_in_stock = #{isInStock}
        WHERE seq = #{seq}
    </update>

    <delete id="deleteBook"
            parameterType="Long">
        DELETE FROM book
        WHERE seq=#{seq}
    </delete>


    <!--  카테고리 CRUD  -->
    <insert id="insertCategory"
            parameterType="CategoryDto">
        INSERT INTO category (category_name)
        VALUES (#{categoryName})
    </insert>

    <select id="getCategoryList"
            resultType="CategoryDto">
        SELECT seq, category_name
        FROM category
    </select>

    <update id="updateCategory"
            parameterType="CategoryDto">
        UPDATE category
        SET category_name = #{categoryName}
        WHERE seq = #{seq}
    </update>

    <delete id="deleteCategory"
            parameterType="Long">
        DELETE FROM category
        WHERE seq=#{seq}
    </delete>


    <!-- book_info 테이블 total_rent_count + 1 -->
    <update id="addRentCount"
            parameterType="Long">
        UPDATE book_info
        SET total_rent_count = total_rent_count + 1
        WHERE isbn = (SELECT isbn
        FROM book
        WHERE seq = #{bookSeq})
    </update>

    <!-- book 테이블 is_in_stock Y로 변경 -->
    <update id="changeBookStatusToY"
            parameterType="Long">
        UPDATE book
        SET is_in_stock = 'Y'
        WHERE seq = #{seq}
    </update>

    <!-- book 테이블 is_in_stock N으로 변경 -->
    <update id="changeBookStatusToN"
            parameterType="Long">
        UPDATE book
        SET is_in_stock = 'N'
        WHERE seq = #{seq}
    </update>

</mapper>